<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.exam.dao.TbExamMapper">
  <resultMap id="BaseResultMap" type="com.project.exam.model.TbExam">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="student_id" jdbcType="INTEGER" property="studentId" />
    <result column="score" jdbcType="INTEGER" property="score" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, student_id, score, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_exam
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_exam
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.project.exam.model.TbExam">
    insert into tb_exam (id, student_id, score, 
      create_time, update_time)
    values (#{id,jdbcType=INTEGER}, #{studentId,jdbcType=INTEGER}, #{score,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.project.exam.model.TbExam">
    insert into tb_exam
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="studentId != null">
        student_id,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="studentId != null">
        #{studentId,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.project.exam.model.TbExam">
    update tb_exam
    <set>
      <if test="studentId != null">
        student_id = #{studentId,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        score = #{score1,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.project.exam.model.TbExam">
    update tb_exam
    set student_id = #{studentId,jdbcType=INTEGER},
      score = #{score,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- 自定义 -->
  <select id="selectByStuId" resultMap="BaseResultMap">
  		select * from tb_exam where student_id = #{studentId} order by create_time desc limit 0, 1
  </select>
  <!-- 分页 -->
	<sql id="limit_sql">
		<if test="pageinfo.startIndex != null and pageinfo.paginationSize != null">
			limit #{pageinfo.startIndex},#{pageinfo.paginationSize}
		</if>
	</sql>
	<!-- 排序 -->
	<sql id="orderby_sql">
		ORDER BY create_time desc
	</sql>
  <!-- 获取符合条件的用户信息 分页展示 -->
  <select id="getDataList" resultMap="BaseResultMap">
		SELECT e.*, u.real_name realname, u.user_name username
		FROM tb_exam e
		left join front_user u on e.student_id = u.id
		<where>
			and u.deleted = 0 and u.type = 2 
			<if test="pageinfo.params != null">
				<if test="pageinfo.params.keyword != null">
					AND u.name like CONCAT('%','${pageinfo.params.keyword}','%' )
				</if>
			</if>
		</where>
		<include refid="orderby_sql" />
		<include refid="limit_sql" />
	</select>
	<select id="getDataTotalNum" resultType="java.lang.Integer">
		SELECT count(1)
		FROM tb_exam e
		left join front_user u on e.student_id = u.id
		<where>
			and u.deleted = 0 and u.type = 2 
			<if test="pageinfo.params != null">
				<if test="pageinfo.params.keyword != null">
					AND u.name like CONCAT('%','${pageinfo.params.keyword}','%' )
				</if>
			</if>
		</where>
	</select>
</mapper>